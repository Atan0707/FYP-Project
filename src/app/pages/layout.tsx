'use client';

import { Geist, Geist_Mono } from "next/font/google";
import "../globals.css";
import { SidebarLayout } from "@/components/layouts/sidebar-layout";
import { usePathname } from "next/navigation";

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

// export const metadata: Metadata = {
//   title: "Create Next App",
//   description: "Generated by create next app",
// };

function generateBreadcrumbs(pathname: string) {
  // Remove trailing slash and split path into segments
  const segments = pathname.replace(/\/$/, "").split("/").filter(Boolean);
  
  // Filter out the 'pages' segment and map the remaining segments
  return segments
    .filter(segment => segment !== 'pages')
    .map((segment, index, filteredSegments) => {
      // Build the URL for this breadcrumb
      const href = "/" + filteredSegments.slice(0, index + 1).join("/");
      // Capitalize first letter and replace hyphens with spaces
      const label = segment.charAt(0).toUpperCase() + segment.slice(1).replace(/-/g, " ");
      
      return { href, label };
    });
}

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  const pathname = usePathname();
  const breadcrumbItems = generateBreadcrumbs(pathname);

  return (
    <html lang="en">
      <body className={`${geistSans.variable} ${geistMono.variable} antialiased`}>
        <SidebarLayout breadcrumbItems={breadcrumbItems}>
          {children}
        </SidebarLayout>
      </body>
    </html>
  );
}
