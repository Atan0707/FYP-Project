version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    env_file:
      - .env
    environment:
      - NODE_ENV=production
      - DATABASE_URL=${DATABASE_URL}
      - JWT_SECRET=${JWT_SECRET}
      - GOOGLE_CLOUD_PROJECT_ID=${GOOGLE_CLOUD_PROJECT_ID}
      - GOOGLE_CLOUD_CREDENTIALS=${GOOGLE_CLOUD_CREDENTIALS}
      - NEXT_PUBLIC_GOOGLE_MAPS_API_KEY=${NEXT_PUBLIC_GOOGLE_MAPS_API_KEY}
      - AUTH0_SECRET=${AUTH0_SECRET}
      - AUTH0_DOMAIN=${AUTH0_DOMAIN}
      - AUTH0_CLIENT_ID=${AUTH0_CLIENT_ID}
      - AUTH0_CLIENT_SECRET=${AUTH0_CLIENT_SECRET}
      - AUTH0_AUDIENCE=${AUTH0_AUDIENCE}
      - AUTH0_SCOPE=${AUTH0_SCOPE}
      - NEXT_PUBLIC_PRIVATE_KEY=${NEXT_PUBLIC_PRIVATE_KEY}
      - NEXT_PUBLIC_RPC_URL=${NEXT_PUBLIC_RPC_URL}
      - EMAIL_USER=${EMAIL_USER}
      - EMAIL_PASS=${EMAIL_PASS}
      - NEXTAUTH_URL=${NEXTAUTH_URL:-http://localhost:3000}
      - SECRET_KEY=${SECRET_KEY}
      - COOKIE_DOMAIN=${COOKIE_DOMAIN}
    volumes:
      # Mount uploads directory if you need persistent file storage
      - ./public/uploads:/app/public/uploads
    restart: unless-stopped
    # depends_on:
    #   - db

  # Optional: PostgreSQL database (uncomment and configure if needed)
  # db:
  #   image: postgres:15-alpine
  #   environment:
  #     - POSTGRES_DB=${POSTGRES_DB:-fyp_project}
  #     - POSTGRES_USER=${POSTGRES_USER:-postgres}
  #     - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
  #   volumes:
  #     - postgres_data:/var/lib/postgresql/data
  #   ports:
  #     - "5432:5432"
  #   restart: unless-stopped.

volumes:
  postgres_data: 